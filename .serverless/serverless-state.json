{
  "service": {
    "service": "python-offline-demo",
    "serviceObject": {
      "name": "python-offline-demo"
    },
    "provider": {
      "name": "aws",
      "runtime": "python3.11",
      "region": "us-east-1",
      "stage": "offline",
      "environment": {
        "DYNAMODB_TABLE": "main-table-offline",
        "DYNAMODB_ENDPOINT": "http://localhost:4566"
      },
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          },
          "CreateItemLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/python-offline-demo-offline-createItem"
            }
          },
          "QueueHandlerLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/python-offline-demo-offline-queueHandler"
            }
          },
          "S3HandlerLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/python-offline-demo-offline-s3Handler"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "python-offline-demo",
                        "offline",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup",
                          "logs:TagResource"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/python-offline-demo-offline*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/python-offline-demo-offline*:*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "sqs:ReceiveMessage",
                          "sqs:DeleteMessage",
                          "sqs:GetQueueAttributes"
                        ],
                        "Resource": [
                          {
                            "Fn::GetAtt": [
                              "MainQueue",
                              "Arn"
                            ]
                          }
                        ]
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "python-offline-demo",
                    "offline",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "CreateItemLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/python-offline-demo/offline/1754404934280-2025-08-05T14:42:14.280Z/python-offline-demo.zip"
              },
              "Handler": "handler.create_item",
              "Runtime": "python3.11",
              "FunctionName": "python-offline-demo-offline-createItem",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "DYNAMODB_TABLE": "main-table-offline",
                  "DYNAMODB_ENDPOINT": "http://localhost:4566"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "CreateItemLogGroup"
            ]
          },
          "QueueHandlerLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/python-offline-demo/offline/1754404934280-2025-08-05T14:42:14.280Z/python-offline-demo.zip"
              },
              "Handler": "handler.queue_handler",
              "Runtime": "python3.11",
              "FunctionName": "python-offline-demo-offline-queueHandler",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "DYNAMODB_TABLE": "main-table-offline",
                  "DYNAMODB_ENDPOINT": "http://localhost:4566"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "QueueHandlerLogGroup"
            ]
          },
          "S3HandlerLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/python-offline-demo/offline/1754404934280-2025-08-05T14:42:14.280Z/python-offline-demo.zip"
              },
              "Handler": "handler.s3_handler",
              "Runtime": "python3.11",
              "FunctionName": "python-offline-demo-offline-s3Handler",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "DYNAMODB_TABLE": "main-table-offline",
                  "DYNAMODB_ENDPOINT": "http://localhost:4566"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "S3HandlerLogGroup"
            ]
          },
          "CreateItemLambdaVersionpvYfYyAvrfvW274q1c2pdjpyA9nH2mM9U3fyid5lRk": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "CreateItemLambdaFunction"
              },
              "CodeSha256": "9ow717nP/NE03crpH4CzyZHJQcL5uRBbLohR8WAFoew="
            }
          },
          "QueueHandlerLambdaVersionH6SvVFeK74aalwgGXmITxbsjVsjRBLWTLzNQ8K4": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "QueueHandlerLambdaFunction"
              },
              "CodeSha256": "9ow717nP/NE03crpH4CzyZHJQcL5uRBbLohR8WAFoew="
            }
          },
          "S3HandlerLambdaVersionA5HDZGiOqD1OxPkkFNyp3hhvdV3dl15kVYPxTnof2c": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "S3HandlerLambdaFunction"
              },
              "CodeSha256": "9ow717nP/NE03crpH4CzyZHJQcL5uRBbLohR8WAFoew="
            }
          },
          "S3HandlerCustomS31": {
            "Type": "Custom::S3",
            "Version": 1,
            "DependsOn": [
              "S3HandlerLambdaFunction",
              "CustomDashresourceDashexistingDashs3LambdaFunction"
            ],
            "Properties": {
              "ServiceToken": {
                "Fn::GetAtt": [
                  "CustomDashresourceDashexistingDashs3LambdaFunction",
                  "Arn"
                ]
              },
              "FunctionName": "python-offline-demo-offline-s3Handler",
              "BucketName": "main-bucket-offline",
              "BucketConfigs": [
                {
                  "Event": "s3:ObjectCreated:*",
                  "Rules": []
                }
              ]
            }
          },
          "IamRoleCustomResourcesLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "offline",
                        "python-offline-demo",
                        "custom-resources-lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Resource": {
                          "Fn::Join": [
                            ":",
                            [
                              "arn",
                              {
                                "Ref": "AWS::Partition"
                              },
                              "s3",
                              "",
                              "",
                              "main-bucket-offline"
                            ]
                          ]
                        },
                        "Action": [
                          "s3:PutBucketNotification",
                          "s3:GetBucketNotification"
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Resource": {
                          "Fn::Join": [
                            ":",
                            [
                              "arn",
                              {
                                "Ref": "AWS::Partition"
                              },
                              "lambda",
                              {
                                "Ref": "AWS::Region"
                              },
                              {
                                "Ref": "AWS::AccountId"
                              },
                              "function",
                              "*"
                            ]
                          ]
                        },
                        "Action": [
                          "lambda:AddPermission",
                          "lambda:RemovePermission"
                        ]
                      }
                    ]
                  }
                }
              ]
            }
          },
          "CustomDashresourceDashexistingDashs3LambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/python-offline-demo/offline/1754404934280-2025-08-05T14:42:14.280Z/custom-resources.zip"
              },
              "FunctionName": "python-offline-demo-offline-custom-resource-existing-s3",
              "Handler": "s3/handler.handler",
              "MemorySize": 1024,
              "Runtime": "nodejs18.x",
              "Timeout": 180,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleCustomResourcesLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "IamRoleCustomResourcesLambdaExecution"
            ]
          },
          "QueueHandlerEventSourceMappingSQSMainQueue": {
            "Type": "AWS::Lambda::EventSourceMapping",
            "DependsOn": [
              "IamRoleLambdaExecution"
            ],
            "Properties": {
              "BatchSize": 10,
              "EventSourceArn": {
                "Fn::GetAtt": [
                  "MainQueue",
                  "Arn"
                ]
              },
              "FunctionName": {
                "Fn::GetAtt": [
                  "QueueHandlerLambdaFunction",
                  "Arn"
                ]
              },
              "Enabled": true
            }
          },
          "HttpApi": {
            "Type": "AWS::ApiGatewayV2::Api",
            "Properties": {
              "Name": "offline-python-offline-demo",
              "ProtocolType": "HTTP"
            }
          },
          "HttpApiStage": {
            "Type": "AWS::ApiGatewayV2::Stage",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "StageName": "$default",
              "AutoDeploy": true,
              "DefaultRouteSettings": {
                "DetailedMetricsEnabled": false
              }
            }
          },
          "CreateItemLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "CreateItemLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationCreateItem": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"CreateItemLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRoutePostCreateDashitem": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "POST /create-item",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationCreateItem"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationCreateItem"
          },
          "MainTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "main-table-offline",
              "AttributeDefinitions": [
                {
                  "AttributeName": "PK",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "PK",
                  "KeyType": "HASH"
                }
              ],
              "BillingMode": "PAY_PER_REQUEST"
            }
          },
          "MainQueue": {
            "Type": "AWS::SQS::Queue",
            "Properties": {
              "QueueName": "main-queue-offline"
            }
          },
          "MainBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketName": "main-bucket-offline"
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            },
            "Export": {
              "Name": "sls-python-offline-demo-offline-ServerlessDeploymentBucketName"
            }
          },
          "CreateItemLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "CreateItemLambdaVersionpvYfYyAvrfvW274q1c2pdjpyA9nH2mM9U3fyid5lRk"
            },
            "Export": {
              "Name": "sls-python-offline-demo-offline-CreateItemLambdaFunctionQualifiedArn"
            }
          },
          "QueueHandlerLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "QueueHandlerLambdaVersionH6SvVFeK74aalwgGXmITxbsjVsjRBLWTLzNQ8K4"
            },
            "Export": {
              "Name": "sls-python-offline-demo-offline-QueueHandlerLambdaFunctionQualifiedArn"
            }
          },
          "S3HandlerLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "S3HandlerLambdaVersionA5HDZGiOqD1OxPkkFNyp3hhvdV3dl15kVYPxTnof2c"
            },
            "Export": {
              "Name": "sls-python-offline-demo-offline-S3HandlerLambdaFunctionQualifiedArn"
            }
          },
          "HttpApiId": {
            "Description": "Id of the HTTP API",
            "Value": {
              "Ref": "HttpApi"
            },
            "Export": {
              "Name": "sls-python-offline-demo-offline-HttpApiId"
            }
          },
          "HttpApiUrl": {
            "Description": "URL of the HTTP API",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "HttpApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  }
                ]
              ]
            },
            "Export": {
              "Name": "sls-python-offline-demo-offline-HttpApiUrl"
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "custom": {
      "localstack": {
        "stages": [
          "offline"
        ]
      },
      "endpoints": {
        "dynamodb": {
          "offline": "http://localhost:4566"
        }
      }
    },
    "plugins": [
      "serverless-localstack"
    ],
    "pluginsData": {},
    "functions": {
      "createItem": {
        "handler": "handler.create_item",
        "runtime": "python3.11",
        "events": [
          {
            "httpApi": {
              "path": "/create-item",
              "method": "post"
            },
            "resolvedMethod": "POST",
            "resolvedPath": "/create-item"
          }
        ],
        "name": "python-offline-demo-offline-createItem",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "vpc": {},
        "versionLogicalId": "CreateItemLambdaVersionpvYfYyAvrfvW274q1c2pdjpyA9nH2mM9U3fyid5lRk"
      },
      "queueHandler": {
        "handler": "handler.queue_handler",
        "runtime": "python3.11",
        "events": [
          {
            "sqs": {
              "arn": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"IamRoleLambdaExecution\"][\"Properties\"][\"Policies\"][0][\"PolicyDocument\"][\"Statement\"][2][\"Resource\"][0]"
              }
            }
          }
        ],
        "name": "python-offline-demo-offline-queueHandler",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "vpc": {},
        "versionLogicalId": "QueueHandlerLambdaVersionH6SvVFeK74aalwgGXmITxbsjVsjRBLWTLzNQ8K4"
      },
      "s3Handler": {
        "handler": "handler.s3_handler",
        "runtime": "python3.11",
        "events": [
          {
            "s3": {
              "bucket": "main-bucket-offline",
              "event": "s3:ObjectCreated:*",
              "existing": true
            }
          }
        ],
        "name": "python-offline-demo-offline-s3Handler",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "vpc": {},
        "versionLogicalId": "S3HandlerLambdaVersionA5HDZGiOqD1OxPkkFNyp3hhvdV3dl15kVYPxTnof2c"
      }
    },
    "resources": {
      "Resources": {
        "MainTable": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "TableName": "main-table-offline",
            "AttributeDefinitions": [
              {
                "AttributeName": "PK",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "PK",
                "KeyType": "HASH"
              }
            ],
            "BillingMode": "PAY_PER_REQUEST"
          }
        },
        "MainQueue": {
          "Type": "AWS::SQS::Queue",
          "Properties": {
            "QueueName": "main-queue-offline"
          }
        },
        "MainBucket": {
          "Type": "AWS::S3::Bucket",
          "Properties": {
            "BucketName": "main-bucket-offline"
          }
        }
      },
      "Outputs": {}
    },
    "configValidationMode": "warn",
    "serviceFilename": "serverless.yml",
    "initialServerlessConfig": {
      "service": "python-offline-demo",
      "plugins": {
        "$ref": "$[\"service\"][\"plugins\"]"
      },
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "custom": {
        "$ref": "$[\"service\"][\"custom\"]"
      },
      "functions": {
        "$ref": "$[\"service\"][\"functions\"]"
      },
      "resources": {
        "$ref": "$[\"service\"][\"resources\"]"
      }
    },
    "layers": {},
    "isDashboardMonitoringPreconfigured": false,
    "artifact": "/home/fatihtatoglu/workspace/fatihtatoglu/serverless-python-demo/.serverless/python-offline-demo.zip"
  },
  "package": {
    "artifactDirectoryName": "serverless/python-offline-demo/offline/1754404934280-2025-08-05T14:42:14.280Z",
    "artifact": "python-offline-demo.zip"
  }
}